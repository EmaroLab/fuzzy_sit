(define-fuzzy-logic lukasiewicz)
(define-fuzzy-concept restriction_min2-Book right-shoulder(1.0, 2.0, 1.0, 2.0) )
(define-fuzzy-concept restriction_min1-Cup right-shoulder(0.0, 1.0, 0.0, 1.0) )
(define-fuzzy-concept restriction_min1-Book right-shoulder(0.0, 1.0, 0.0, 1.0) )
(define-concept Scene1 (and (some behind restriction_min1-Book) (some behind restriction_min1-Cup) (some left restriction_min1-Book) (some left restriction_min1-Cup) ) )
(define-concept Scene2 (and (some behind restriction_min1-Cup) (some behind restriction_min2-Book) (some left restriction_min1-Cup) (some left restriction_min2-Book) ) )
(define-primitive-concept Scene1 *top* )
(define-primitive-concept Cup *top* )
(define-primitive-concept Scene2 *top* )
(define-primitive-concept Scene *top* )
(define-primitive-concept Book *top* )
(define-primitive-concept Object *top* )
(symmetric hasLeft)
(symmetric hasBehind)
(instance c2 Cup 0.85)
(instance b22 Book 0.6)
(instance c1 Cup 0.75)
(instance b1 Book 0.8)
(instance b21 Book 0.7)
(related c1 b1 hasLeft 0.3)
(related c1 b1 hasBehind 0.4)
(related c2 b22 hasBehind 0.3)
(related c2 b21 hasBehind 0.5)
(related c2 b21 hasLeft 0.4)
(related c2 b22 hasLeft 0.7)
(define-primitive-concept Book Object)
(define-primitive-concept Cup Object)
(define-primitive-concept Scene2 Scene)
(define-primitive-concept Scene1 Scene)

(define-primitive-concept SpatialObject (or Object (some hasLeft Object)))



(max-instance? b1 SpatialObject)
(min-instance? b1 SpatialObject)
(max-instance? b1 Object)
(min-instance? b1 Object)
(max-instance? b1 Book)
(min-instance? b1 Book)
#(all-instances? C)
(max-related? c1 b1 hasLeft)
(min-related? c1 b1 hasLeft)
#(max-subs? C D)
#(min-subs? C D)
#(max-g-subs? C D)
#(min-g-subs? C D)
#(max-l-subs? C D)
#(min-l-subs? C D)
#(max-kd-subs? C D)
#(min-kd-subs? C D)
(max-sat? Book b1)
(min-sat? Book b1)
#(max-var? var)
#(min-var? var)
#(defuzzify-lom? C m a F)
#(defuzzify-mom? C m a F)
#(defuzzify-som? C m a F)
#(bnp? f)
