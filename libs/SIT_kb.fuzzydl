(define-fuzzy-logic zadeh) # lukasiewicz / zadeh / classical

############################################################
##    Scene Definition
############################################################

(define-primitive-concept Object *top*)
(define-primitive-concept Scene  *top*)
(disjoint Object Scene)

(define-fuzzy-concept atLeast1 right-shoulder( 0.0, 100.0, 0.0, 1.0))
(define-fuzzy-concept atLeast2 right-shoulder( 0.0, 100.0, 1.0, 2.0))
(define-fuzzy-concept atLeast3 right-shoulder( 0.0, 100.0, 2.0, 3.0))
(define-fuzzy-concept atLeast4 right-shoulder( 0.0, 100.0, 3.0, 4.0))

(define-primitive-concept Scene2 Scene)
(define-concept Scene2 (some right atLeast2))

(define-primitive-concept Scene3 Scene)
(define-concept Scene3 (some right atLeast3))

(define-primitive-concept Scene4 Scene)
(define-concept Scene4 (some front atLeast2))

(define-primitive-concept Scene5 Scene)
(define-concept Scene5 (and (some right atLeast3) (some front atLeast3)))

(define-primitive-concept Scene6 Scene)
(define-concept Scene6 (and (some right atLeast2) (some front atLeast3)))

# this query does not work if the other are not commented (check if this is a visualization or computation problem !!!!!!!!!!!!!!!!!!!!!)
# Scene2
# |_____ Scene6
# |      |_____ Scene5
# |_____ Scene3
#        |_____ Scene5
# Scene4
# |_____ Scene6
#        |_____ Scene5
#(min-subs? Scene Scene4)


############################################################
##    Spatial relations
############################################################

(define-primitive-concept Book  Object)
(define-primitive-concept Mouse Object)
(define-primitive-concept Cup   Object)

(define-concept LeftObject   (and (or Book Mouse Cup) (some hasLeft   Object)))
(define-concept RightObject  (and (or Book Mouse Cup) (some hasRight  Object)))
(define-concept FrontObject  (and (or Book Mouse Cup) (some hasFront  Object)))
(define-concept BehindObject (and (or Book Mouse Cup) (some hasBehind Object)))

(range  hasRight Object)
(domain hasRight Object)
(range  hasLeft  Object)
(domain hasLeft  Object)
(inverse hasRight hasLeft)

(range  hasFront  Object)
(domain hasFront  Object)
(range  hasBehind Object)
(domain hasBehind Object)
(inverse hasFront hasBehind)

############################################################
##    Scene Classification
############################################################

(range right *real* 0 100.0 )
(functional right)

(range left *real* 0 100.0 )
(functional left)

(range front *real* 0 100.0 )
(functional front)

(range behind *real* 0 100.0 )
(functional behind)