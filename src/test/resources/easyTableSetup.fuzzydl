(define-fuzzy-logic zadeh )
(define-fuzzy-concept atLeast0.35 right-shoulder(0.0, 20.0, 0.07, 0.35) )
(define-fuzzy-concept atLeast0.9 right-shoulder(0.0, 20.0, 0.19, 0.9) )
(define-fuzzy-concept atLeast0.31 right-shoulder(0.0, 20.0, 0.07, 0.31) )
(define-fuzzy-concept atLeast0.53 right-shoulder(0.0, 20.0, 0.11, 0.53) )
(define-fuzzy-concept atLeast0.88 right-shoulder(0.0, 20.0, 0.18, 0.88) )
(define-fuzzy-concept atLeast0.51 right-shoulder(0.0, 20.0, 0.11, 0.51) )
(functional hasPlateLeft)
(range hasPlateLeft *real* 0.0 100.0)
(functional hasKnifeRight)
(range hasKnifeRight *real* 0.0 100.0)
(functional hasForkLeft)
(range hasForkLeft *real* 0.0 100.0)
(functional hasGlassRight)
(range hasGlassRight *real* 0.0 100.0)
(functional hasPlateBehind)
(range hasPlateBehind *real* 0.0 100.0)
(functional hasPlateRight)
(range hasPlateRight *real* 0.0 100.0)
(functional hasKnifeFront)
(range hasKnifeFront *real* 0.0 100.0)
(functional hasForkRight)
(range hasForkRight *real* 0.0 100.0)
(functional hasKnifeLeft)
(range hasKnifeLeft *real* 0.0 100.0)
(functional hasKnifeBehind)
(range hasKnifeBehind *real* 0.0 100.0)
(functional hasForkBehind)
(range hasForkBehind *real* 0.0 100.0)
(functional hasGlassFront)
(range hasGlassFront *real* 0.0 100.0)
(functional hasGlassLeft)
(range hasGlassLeft *real* 0.0 100.0)
(functional hasGlassBehind)
(range hasGlassBehind *real* 0.0 100.0)
(functional hasPlateFront)
(range hasPlateFront *real* 0.0 100.0)
(functional hasForkFront)
(range hasForkFront *real* 0.0 100.0)
(define-concept KnifeBehind (g-and (some isBehindOf SpatialObject) Fork ))
(define-concept PlateLeft (g-and (some isLeftOf SpatialObject) Plate ))
(define-concept GlassFront (g-and (some isFrontOf SpatialObject) Glass ))
(define-concept KnifeRight (g-and (some isRightOf SpatialObject) Knife ))
(define-concept ForkRight (g-and (some isRightOf SpatialObject) Fork ))
(define-concept KnifeLeft (g-and (some isLeftOf SpatialObject) Knife ))
(define-concept PlateRight (g-and (some isRightOf SpatialObject) Plate ))
(define-concept TableSetUp (g-and (some hasForkBehind atLeast0.35) (some hasForkFront atLeast0.88) (some hasForkLeft atLeast0.9) (some hasForkRight atLeast0.31) (some hasGlassBehind atLeast0.9) (some hasGlassFront atLeast0.31) (some hasGlassLeft atLeast0.51) (some hasGlassRight atLeast0.53) (some hasKnifeBehind atLeast0.35) (some hasKnifeFront atLeast0.9) (some hasKnifeLeft atLeast0.31) (some hasKnifeRight atLeast0.9) (some hasPlateBehind atLeast0.31) (some hasPlateFront atLeast0.9) (some hasPlateLeft atLeast0.9) (some hasPlateRight atLeast0.9) ))
(define-concept ForkBehind (g-and (some isBehindOf SpatialObject) Fork ))
(define-concept GlassRight (g-and (some isRightOf SpatialObject) Glass ))
(define-concept GlassLeft (g-and (some isLeftOf SpatialObject) Glass ))
(define-concept GlassBehind (g-and (some isBehindOf SpatialObject) Glass ))
(define-concept PlateBehind (g-and (some isBehindOf SpatialObject) Plate ))
(define-concept KnifeFront (g-and (some isFrontOf SpatialObject) Knife ))
(define-concept ForkFront (g-and (some isFrontOf SpatialObject) Fork ))
(define-concept PlateFront (g-and (some isFrontOf SpatialObject) Plate ))
(define-concept ForkLeft (g-and (some isLeftOf SpatialObject) Fork ))
(disjoint Object Scene )
(disjoint Scene SpatialObject )
(domain hasForkFront Scene)
(domain isLeftOf SpatialObject)
(domain hasPlateBehind Scene)
(domain hasKnifeRight Scene)
(domain isFrontOf SpatialObject)
(domain hasPlateFront Scene)
(domain hasPlateLeft Scene)
(domain hasKnifeBehind Scene)
(domain hasGlassFront Scene)
(domain hasGlassBehind Scene)
(domain hasKnifeFront Scene)
(domain hasKnifeLeft Scene)
(domain isBehindOf SpatialObject)
(domain hasForkRight Scene)
(domain hasForkLeft Scene)
(domain hasPlateRight Scene)
(domain hasForkBehind Scene)
(domain hasForkBehind (g-implies (some hasForkBehind atLeast0.35) (g-implies (g-and (some hasForkFront atLeast0.88) (some hasForkLeft atLeast0.9) (some hasForkRight atLeast0.31) (some hasGlassBehind atLeast0.9) (some hasGlassFront atLeast0.31) (some hasGlassLeft atLeast0.51) (some hasGlassRight atLeast0.53) (some hasKnifeBehind atLeast0.35) (some hasKnifeFront atLeast0.9) (some hasKnifeLeft atLeast0.31) (some hasKnifeRight atLeast0.9) (some hasPlateBehind atLeast0.31) (some hasPlateFront atLeast0.9) (some hasPlateLeft atLeast0.9) (some hasPlateRight atLeast0.9) ) TableSetUp)))
(domain isRightOf SpatialObject)
(domain hasGlassRight Scene)
(domain hasGlassLeft Scene)
(range isBehindOf Object)
(range isLeftOf Object)
(range isFrontOf Object)
(range isRightOf Object)
(transitive isFrontOf)
(transitive isBehindOf)
(transitive isRightOf)
(transitive isLeftOf)

#!# TableSetUp <- Knife=0.1,Fork=0.7,Glass=0.1,Plate=0.1;Knife=0.7,Fork=0.1,Glass=0.1,Plate=0.1;Knife=0.1,Fork=0.1,Glass=0.1,Plate=0.7;Knife=0.1,Fork=0.1,Glass=0.7,Plate=0.1;
