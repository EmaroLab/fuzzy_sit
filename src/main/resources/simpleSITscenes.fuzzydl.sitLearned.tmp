(define-fuzzy-logic zadeh )
(define-fuzzy-concept atLeast0.42093 right-shoulder(0.0, 20.0, 0.210465, 0.42093) )
(define-fuzzy-concept atLeast0.780941 right-shoulder(0.0, 20.0, 0.390471, 0.780941) )
(define-fuzzy-concept atLeast0.609786 right-shoulder(0.0, 20.0, 0.304893, 0.609786) )
(define-fuzzy-concept atLeast0.50445 right-shoulder(0.0, 20.0, 0.252225, 0.50445) )
(define-fuzzy-concept atLeast0.35093 right-shoulder(0.0, 20.0, 0.175465, 0.35093) )
(define-fuzzy-concept atLeast0.700941 right-shoulder(0.0, 20.0, 0.350471, 0.700941) )
(define-fuzzy-concept atLeast0.67093 right-shoulder(0.0, 20.0, 0.335465, 0.67093) )
(define-fuzzy-concept atLeast0.75093 right-shoulder(0.0, 20.0, 0.375465, 0.75093) )
(functional hasPlaneRight)
(range hasPlaneRight *real* 0.0 100.0)
(functional hasConeLeft)
(range hasConeLeft *real* 0.0 100.0)
(functional hasSphereLeft)
(range hasSphereLeft *real* 0.0 100.0)
(functional hasPlaneLeft)
(range hasPlaneLeft *real* 0.0 100.0)
(functional hasConeRight)
(range hasConeRight *real* 0.0 100.0)
(functional hasSphereRight)
(range hasSphereRight *real* 0.0 100.0)
(functional hasSphereBehind)
(range hasSphereBehind *real* 0.0 100.0)
(functional hasCylinderRight)
(range hasCylinderRight *real* 0.0 100.0)
(functional hasCylinderLeft)
(range hasCylinderLeft *real* 0.0 100.0)
(functional hasPlaneFront)
(range hasPlaneFront *real* 0.0 100.0)
(functional hasPlaneBehind)
(range hasPlaneBehind *real* 0.0 100.0)
(functional hasSphereFront)
(range hasSphereFront *real* 0.0 100.0)
(functional hasConeFront)
(range hasConeFront *real* 0.0 100.0)
(functional hasCylinderFront)
(range hasCylinderFront *real* 0.0 100.0)
(functional hasConeBehind)
(range hasConeBehind *real* 0.0 100.0)
(functional hasCylinderBehind)
(range hasCylinderBehind *real* 0.0 100.0)
(define-concept SphereFront (g-and (some isFrontOf SpatialObject) Sphere ))
(define-concept ConeBehind (g-and (some isBehindOf SpatialObject) Cone ))
(define-concept CylinderFront (g-and (some isFrontOf SpatialObject) Cylinder ))
(define-concept SceneBase (and (some hasConeBehind atLeast0.67093) (some hasConeFront atLeast0.35093) (some hasConeLeft atLeast0.42093) (some hasConeRight atLeast0.75093) (some hasSphereBehind atLeast0.50445) (some hasSphereFront atLeast0.700941) (some hasSphereLeft atLeast0.780941) (some hasSphereRight atLeast0.609786) ))
(define-concept PlaneLeft (g-and (some isLeftOf SpatialObject) Plane ))
(define-concept SphereBehind (g-and (some isBehindOf SpatialObject) Sphere ))
(define-concept ConeRight (g-and (some isRightOf SpatialObject) Cone ))
(define-concept SphereLeft (g-and (some isLeftOf SpatialObject) Sphere ))
(define-concept PlaneRight (g-and (some isRightOf SpatialObject) Plane ))
(define-concept CylinderLeft (g-and (some isLeftOf SpatialObject) Cylinder ))
(define-concept ConeLeft (g-and (some isLeftOf SpatialObject) Cone ))
(define-concept SphereRight (g-and (some isRightOf SpatialObject) Sphere ))
(define-concept ConeFront (g-and (some isFrontOf SpatialObject) Cone ))
(define-concept CylinderBehind (g-and (some isBehindOf SpatialObject) Cylinder ))
(define-concept CylinderRight (g-and (some isRightOf SpatialObject) Cylinder ))
(define-concept PlaneFront (g-and (some isFrontOf SpatialObject) Plane ))
(define-concept PlaneBehind (g-and (some isBehindOf SpatialObject) Plane ))
(define-primitive-concept SceneBase Scene )
(define-primitive-concept Cone Object )
(define-primitive-concept Sphere Object )
(define-primitive-concept Plane Object )
(define-primitive-concept Cylinder Object )
(disjoint Object Scene )
(disjoint Scene SpatialObject )
(domain hasConeBehind Scene)
(domain hasCylinderBehind Scene)
(domain hasConeFront Scene)
(domain hasSphereFront Scene)
(domain isLeftOf SpatialObject)
(domain hasPlaneFront Scene)
(domain hasSphereBehind Scene)
(domain hasSphereLeft Scene)
(domain isFrontOf SpatialObject)
(domain hasCylinderLeft Scene)
(domain hasCylinderFront Scene)
(domain hasConeLeft Scene)
(domain hasPlaneLeft Scene)
(domain hasPlaneBehind Scene)
(domain isBehindOf SpatialObject)
(domain hasConeRight Scene)
(domain hasPlaneRight Scene)
(domain hasSphereRight Scene)
(domain isRightOf SpatialObject)
(domain hasCylinderRight Scene)
(range isBehindOf Object)
(range isLeftOf Object)
(range isFrontOf Object)
(range isRightOf Object)
(transitive isFrontOf)
(transitive isBehindOf)
(transitive isRightOf)
(transitive isLeftOf)

#!# SceneBase <- Sphere=0.10094085059462735,Cone=0.9121301438600181;Sphere=0.8313821719605329,Cone=0.001;
