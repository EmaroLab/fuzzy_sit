(define-fuzzy-logic zadeh)
(define-primitive-concept Object *top*)
(define-primitive-concept Scene  *top*)
(disjoint Object Scene)
(disjoint SpatialObject Scene)

(implies Ca Object)

(range  isRa Object)
(domain isRa SpatialObject)
(range  isRb Object)
(domain isRb SpatialObject)
(range  isRc Object)
(domain isRc SpatialObject)
(range  isRd Object)
(domain isRd SpatialObject)
(range  isRe Object)
(domain isRe SpatialObject)
(range  isRf Object)
(domain isRf SpatialObject)
(range  isRg Object)
(domain isRg SpatialObject)
(range  isRh Object)
(domain isRh SpatialObject)
(range  isRi Object)
(domain isRi SpatialObject)
(range  isRl Object)
(domain isRl SpatialObject)
(range  isRm Object)
(domain isRm SpatialObject)
(range  isRn Object)
(domain isRn SpatialObject)
(range  isRo Object)
(domain isRo SpatialObject)
(range  isRp Object)
(domain isRp SpatialObject)
(range  isRq Object)
(domain isRq SpatialObject)
(range  isRr Object)
(domain isRr SpatialObject)
(range  isRs Object)
(domain isRs SpatialObject)
(range  isRt Object)
(domain isRt SpatialObject)
(range  isRu Object)
(domain isRu SpatialObject)

(define-concept CaRa (and Ca (some isRa  SpatialObject)))
(define-concept CaRb (and Ca (some isRb  SpatialObject)))
(define-concept CaRc (and Ca (some isRc  SpatialObject)))
(define-concept CaRd (and Ca (some isRd  SpatialObject)))
(define-concept CaRe (and Ca (some isRe  SpatialObject)))
(define-concept CaRf (and Ca (some isRf  SpatialObject)))
(define-concept CaRg (and Ca (some isRg  SpatialObject)))
(define-concept CaRh (and Ca (some isRh  SpatialObject)))
(define-concept CaRi (and Ca (some isRi  SpatialObject)))
(define-concept CaRl (and Ca (some isRl  SpatialObject)))
(define-concept CaRm (and Ca (some isRm  SpatialObject)))
(define-concept CaRn (and Ca (some isRn  SpatialObject)))
(define-concept CaRo (and Ca (some isRo  SpatialObject)))
(define-concept CaRp (and Ca (some isRp  SpatialObject)))
(define-concept CaRq (and Ca (some isRq  SpatialObject)))
(define-concept CaRr (and Ca (some isRr  SpatialObject)))
(define-concept CaRs (and Ca (some isRs  SpatialObject)))
(define-concept CaRt (and Ca (some isRt  SpatialObject)))
(define-concept CaRu (and Ca (some isRu  SpatialObject)))
