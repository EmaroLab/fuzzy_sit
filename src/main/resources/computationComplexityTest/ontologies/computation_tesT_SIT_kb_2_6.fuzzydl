(define-fuzzy-logic zadeh)

#############################################################################################
##    Main Class Hierarchy
##
## add a new Event type here if you wish,
## this imply also to add sub SpatialObject relations later
#############################################################################################

(define-primitive-concept Event *top*)
(define-primitive-concept Scene  *top*)
(disjoint Event Scene)
(disjoint SpatialObject Scene)

(implies Move Event)
(implies Stop Event)


#############################################################################################
##    Spatial Relations (ζ)
##
## add here a new relation if you wish
## this implies to adjust the below Δ specifications
#############################################################################################

(range  isAfter Event)
(domain isAfter SpatialObject)

(range  isBefore Event)
(domain isBefore SpatialObject)

(range  isOverlap Event)
(domain isOverlap SpatialObject)

(range  isInclude Event)
(domain isInclude SpatialObject)

(range  isLong Event)
(domain isLong SpatialObject)

(range  isShort Event)
(domain isShort SpatialObject)

# (transitive isAfter)
# (inverse isAfter isBefore)

#############################################################################################
##    Scene Classes (Δ)
##
##    Scene Properties (δ) are automatically derived from those
##    ( e.g.: δ = "hasΔ" where Δ ⊂ SpatialObject )
##
## Scene Properties cardinality is based on SIGMA COUNT, defined as:
##           Σ(δ(Δ)) = sum_(η,δ){ ⊕{ ⊗{ Δ.η, δ.η}}}
##
##    EXAMPLE of cardinality for a specific δ:
## δ(Δ) = hasBookLeft
##            = max{ min{Book(α), α.isLeftOf(X1)}, ..., min{Book(α), α.isLeftOf(Xn)}}
##              + ... +
##              max{ min{Book(ω), ω.isLeftOf(X1)}, ..., min{Book(ω), ω.isLeftOf(Xm)}}
##  where: ⊗{ Δ.η, δ.η} = min{Book(η), η.isLeftOf(Xi)}
##  is the minimum classification of  'BookLeft' (⊂ SpatialObject).
##
## SpatialObject is a collection of all Δ,
## those are for each events for each relations.
## If you add a new relation here (e.g.: Right) it will
## be automatically considered in the recognition.
## This imply to add a new property later.
##
## ATTENTION !!!!!!!!!!!
## Δ is parsed by CamelCase where the first part is the
## type class (⊂ Event), while the second is a name
## contained in the related spatial relation (ζ).
#############################################################################################

(define-concept MoveAfter  (and Move (some isAfter  SpatialObject)))
(define-concept MoveBefore  (and Move (some isBefore  SpatialObject)))
(define-concept MoveOverlap  (and Move (some isOverlap  SpatialObject)))
(define-concept MoveInclude  (and Move (some isInclude  SpatialObject)))
(define-concept MoveLong  (and Move (some isLong  SpatialObject)))
(define-concept MoveShort  (and Move (some isShort  SpatialObject)))

(define-concept StopAfter  (and Stop (some isAfter  SpatialObject)))
(define-concept StopBefore  (and Stop (some isBefore  SpatialObject)))
(define-concept StopOverlap  (and Stop (some isOverlap  SpatialObject)))
(define-concept StopInclude  (and Stop (some isInclude  SpatialObject)))
(define-concept StopLong  (and Stop (some isLong  SpatialObject)))
(define-concept StopShort  (and Stop (some isShort  SpatialObject)))


#############################################################################################
##    Learning
##
## During scene learning a new file is create (or overwritten) in order to overcome
## to reasoning manipulation that effects the behaviour for further learning steps.
##
## Also, when the system learns, external annotation are added such as:
##           '#!# SceneName <- 3'
## to indicate, for each scene (by name), the number of events contained in it.
##
## Finally, the learning procedure need the creation of right shoulder sets
## to classify the Σ value. Those have the name:
##           'atLeastφ'
## where φ is a double number (e.g.: 3.8) that indicates the point in which the
## shoulder reach the maximum value (i.e.: 1). On the other hand, the point in
## which it starts to become grater than 0 is set during learning as a percentage
## of the value of φ.
#############################################################################################
